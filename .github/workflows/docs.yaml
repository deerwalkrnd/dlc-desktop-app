name: Deploy Docusaurus to GitHub Pages

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      # Find Docusaurus config file
      - name: Find Docusaurus config
        id: find-config
        run: |
          CONFIG_FILE=$(find . -name "docusaurus.config.js" -type f | head -n 1)
          if [ -z "$CONFIG_FILE" ]; then
            echo "::error::Could not find docusaurus.config.js in the repository"
            exit 1
          fi
          DOCS_DIR=$(dirname "$CONFIG_FILE")
          echo "docs_dir=$DOCS_DIR" >> $GITHUB_OUTPUT
          echo "Found Docusaurus config in: $DOCS_DIR"

      # Install dependencies based on what package manager is available
      - name: Install dependencies
        run: |
          cd ${{ steps.find-config.outputs.docs_dir }}
          if [ -f "package-lock.json" ]; then
            echo "Using npm to install dependencies"
            npm ci
          elif [ -f "yarn.lock" ]; then
            echo "Using yarn to install dependencies"
            yarn install --frozen-lockfile
          elif [ -f "pnpm-lock.yaml" ]; then
            echo "Using pnpm to install dependencies"
            npm install -g pnpm
            pnpm install
          else
            echo "Installing dependencies with npm (no lock file found)"
            npm install
          fi

      # Build the documentation
      - name: Build documentation
        run: |
          cd ${{ steps.find-config.outputs.docs_dir }}
          if [ -f "package.json" ]; then
            if grep -q "\"build\"" package.json; then
              echo "Running build script from package.json"
              if [ -f "yarn.lock" ]; then
                yarn build
              elif [ -f "pnpm-lock.yaml" ]; then
                pnpm build
              else
                npm run build
              fi
            else
              echo "::error::No build script found in package.json"
              exit 1
            fi
          else
            echo "::error::No package.json found in ${{ steps.find-config.outputs.docs_dir }}"
            exit 1
          fi

      # Determine the build output directory
      - name: Determine build directory
        id: build-dir
        run: |
          DOCS_DIR="${{ steps.find-config.outputs.docs_dir }}"
          if [ -d "$DOCS_DIR/build" ]; then
            echo "build_output=$DOCS_DIR/build" >> $GITHUB_OUTPUT
            echo "Build directory found at: $DOCS_DIR/build"
          else
            # Try to find the build directory
            BUILD_DIR=$(find $DOCS_DIR -name "index.html" -type f -path "*/build/*" | head -n 1 | xargs dirname 2>/dev/null || echo "")
            if [ -n "$BUILD_DIR" ]; then
              # Go up directories until we find the root build dir (containing index.html)
              while [ ! -f "$BUILD_DIR/index.html" ] && [ "$BUILD_DIR" != "/" ]; do
                BUILD_DIR=$(dirname "$BUILD_DIR")
              done
              if [ -f "$BUILD_DIR/index.html" ]; then
                echo "build_output=$BUILD_DIR" >> $GITHUB_OUTPUT
                echo "Build directory found at: $BUILD_DIR"
              else
                echo "::error::Could not find build output directory"
                exit 1
              fi
            else
              echo "::error::Could not find build output directory"
              exit 1
            fi
          fi

      # Deploy to the 'documentation' branch
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: documentation # The branch the documentation will be deployed to
          folder: ${{ steps.build-dir.outputs.build_output }} # The folder that contains the built documentation
          clean: true # Automatically remove deleted files from the deployment
          commit-message: "docs: update documentation [skip ci]"